<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>一起学习啦</title>
    <url>/2019/08/05/interest_study/</url>
    <content><![CDATA[<p>###越努力，越幸运！<br>一起学习啦，纯属于兴趣爱好！</p>
]]></content>
      <categories>
        <category>感兴趣</category>
      </categories>
      <tags>
        <tag>爱好</tag>
      </tags>
  </entry>
  <entry>
    <title>更新Hexo安装使用教程</title>
    <url>/2019/07/26/hexo_Tutorial/</url>
    <content><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><blockquote>
<p><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">Hexo框架</a>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
</blockquote>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>1.<a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a>安装<br>2.<a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a>安装（Xcode自带有Git环境）</p>
<h3 id="检查是否安装成功"><a href="#检查是否安装成功" class="headerlink" title="检查是否安装成功"></a>检查是否安装成功</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node -v // 如果可以看到版本信息，说明安装成功</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git --version // 如果可以看到版本信息，说明安装成功</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果执行<code>git --version</code>命令出现下面错误<br><em>macOs High Sierra 升级 macOs Mojave后，idea 报错</em><br><code>Сannot Run Git xcrun: error: invalid active developer path(/Library/Developer/CommandLineTools), missing xcrun at:/Library/Developer/CommandLineTools/usr/bin/xcrun</code></p>
</blockquote>
<h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xcode-select --instal //终端执行</span><br></pre></td></tr></table></figure>

<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>检查版本，成功看到版本号，安装成功！</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo version</span><br></pre></td></tr></table></figure>

<h2 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a>GitHub创建个人仓库</h2><p>1.首先去<a href="https://github.com/">GitHub</a>注册一个GitHub账号</p>
<p>2.注册完登录后，在GitHub.com中看到一个New repository，新建仓库</p>
<p>3.创建一个和你用户名相同的仓库，<a href>后面加.github.io</a>，只有这样，将来要部署到GitHub page的时候，才会被识别，<a href>也就是xxxx.github.io</a>，其中xxx就是你注册GitHub的用户名。我这里是已经建过了。</p>
<p>4.点击create repository</p>
<h2 id="生成SSH添加到GitHub"><a href="#生成SSH添加到GitHub" class="headerlink" title="生成SSH添加到GitHub"></a>生成SSH添加到GitHub</h2><p>打开终端</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure>

<p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。</p>
<p>可以用以下两条，检查一下你有没有输对</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure>

<p>然后创建SSH</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure>

<p>一路回车键。密码可以不用输入，选择YES。</p>
<p>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。终端输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">open ~/.ssh</span><br></pre></td></tr></table></figure>

<p>说明：ssh，简单来讲，就是一个秘钥，其中，<code>id_rsa</code>是你这台电脑的私人秘钥，不能给别人看的，<code>id_rsa.pub</code>是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p>
<p>而后在GitHub的<code>setting</code>中，找到<code>SSH keys</code>的设置选项，点击<code>New SSH key</code></p>
<p>把你的<code>id_rsa.pub</code>里面的信息复制进去。</p>
<p>打开终端，输入下面命令。查看是否成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<h2 id="hexo部署到GitHub"><a href="#hexo部署到GitHub" class="headerlink" title="hexo部署到GitHub"></a>hexo部署到GitHub</h2><p>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件 <code>_config.yml</code>，翻到最后，修改为<br>YourgithubName就是你的GitHub账户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>如果执行出现问题请参考（<a href="https://blog.csdn.net/wxb880114/article/details/94819436" target="_blank" rel="noopener">权限问题</a>）</p>
<p>然后</p>
<figure class="highlight plain"><figcaption><span>clean</span></figcaption><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。<br><code>hexo generate</code> 顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写<br><code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写</p>
<p>过一会儿就可以在<code>http://yourname.github.io</code> 这个网站看到你的博客了！！</p>
<h2 id="写新文章"><a href="#写新文章" class="headerlink" title="写新文章"></a>写新文章</h2><p>接下来你就可以正式开始写文章了</p>
<p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line"></span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line"></span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>

<p>新建完成后，指定文件夹的目录如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>文件/文件夹</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>_config.yml</td>
<td>配置文件</td>
</tr>
<tr>
<td>public</td>
<td>生成的静态文件，这个目录最终会发布到服务器</td>
</tr>
<tr>
<td>scaffolds</td>
<td>一些通用的markdown模板</td>
</tr>
<tr>
<td>source</td>
<td>编写的markdown文件，_drafts草稿文件，_posts发布的文章</td>
</tr>
<tr>
<td>themes</td>
<td>博客的模板</td>
</tr>
</tbody></table>
<p>然后在source/_post中打开markdown文件，就可以开始编辑了。这里我推荐<a href="https://www.typora.io/" target="_blank" rel="noopener">Typora</a>一个MarKdown编辑器,可以直接可视化的编写。</p>
<p>编写之后，在进行下面的重复操作。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>就可以看到更新了。</p>
]]></content>
      <categories>
        <category>Hexo 教程整理</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
